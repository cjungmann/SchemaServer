#!/bin/bash
# -*- mode:sh -*-

output=Makefile

# truncate output file:
>${output}

# Get flags from mysql_config:
echo "MYSQL_COMPILE_FLAGS = $(mysql_config --cflags)" >> ${output}
echo "MYSQL_LINK_FLAGS = $(mysql_config --libs)" >> ${output}


# Add Apache stuff if Apache is installed:
which apache2 > /dev/null
if [ $? -eq 0 ]; then
	declare -a cgi_args=(
		'ScriptAlias\s\+\/cgi-bin'
		/etc/apache2/conf-available/serve-cgi-bin.conf
	)
	CGI_PATH=$( grep "${cgi_args[@]}" | grep -o '\S\+$' )

	echo "CGI_PATH=${CGI_PATH}" >> ${output}
fi	


# surround EOF with single-quotes to prevent $ expansion in heredoc:
# Overriding -g with -ggdb on linux
(cat << 'EOF'
COMPILE_FLAGS = -std=c++11 -Wall -Werror -Weffc++ -pedantic -ggdb -D _DEBUG -D FASTCGI
CXXFLAGS = $(MYSQL_COMPILE_FLAGS) $(COMPILE_FLAGS)
LINK_FLAGS = $(VERSION_LINK_FLAGS) -L /usr/local/lib -lfcgi $(MYSQL_LINK_FLAGS)
CXX = g++

objlist=schema.o istdio.o xmlutils.o qstringer.o advisor.o datastack.o \
specsreader.o adbranch.o prandstr.o vclasses.o ctyper.o bindc.o \
bindstack.o procedure.o storedproc.o fods.o multipart_pull.o mysql_loaddata.o \
linebuffer.o

hpplist=xmlutils.hpp istdio.hpp qstringer.hpp genericuser.hpp advisor.hpp \
adbranch.hpp datastack.hpp specsreader.hpp prandstr.hpp vclasses.hpp \
ctyper.hpp bindc.hpp bindstack.hpp procedure.hpp storedproc.hpp fods.hpp \
schema.hpp multipart_pull.hpp  mysql_loaddata.hpp linebuffer.hpp

define install_utilities
	install -D --mode=755 ../utilities/ss_chkprocs             /usr/local/lib/SchemaServer/utilities/ss_chkprocs
	install -D --mode=755 ../utilities/ss_chksite              /usr/local/lib/SchemaServer/utilities/ss_chksite
	install -D --mode=755 ../utilities/ss_webscript            /usr/local/lib/SchemaServer/utilities/ss_webscript
	install -D --mode=644 ../utilities/test.xsl                /usr/local/lib/SchemaServer/utilities/test.xsl
	cp -sf /usr/local/lib/SchemaServer/utilities/ss_chkprocs   /usr/bin/ss_chkprocs
	cp -sf /usr/local/lib/SchemaServer/utilities/ss_chksite    /usr/bin/ss_chksite
	cp -sf /usr/local/lib/SchemaServer/utilities/ss_webscript  /usr/bin/ss_webscript
endef

define install_info
	makeinfo ../docs/schemaserver.txi --paragraph-indent=0 -o  /usr/share/info
	gzip -f      /usr/share/info/schemaserver.info
	install-info /usr/share/info/schemaserver.info.gz /usr/share/info/dir
endef

define install_documentation
	cp ../docs/schema.fcgi.1 /usr/share/man/man1
	gzip -f                  /usr/share/man/man1/schema.fcgi.1
	cp ../docs/schema.fcgi.7 /usr/share/man/man7
	gzip -f                  /usr/share/man/man7/schema.fcgi.7

	$(if $(shell which makeinfo 2>/dev/null ), $(call install_info))
endef

define install_for_apache
	install -D --mode=644 ../install/SchemaServer.conf /etc/apache2/conf-available/SchemaServer.conf
	a2enconf SchemaServer
endef

define apache_stop_update
	sudo /etc/init.d/apache2 stop
	install -D --mode=755 schema.fcgi           /usr/local/lib/cgi-bin/schema.fcgi
	sudo /etc/init.d/apache2 start
endef

all: schema.fcgi

schema.fcgi : ${objlist} ${hpplist} ${VERSION_DEPS}
	$(CXX) -o schema.fcgi ${objlist} ${LINK_FLAGS}
	$(call increment_file,$(VERSION_PATCH_FILE))

istdio.o : istdio.hpp istdio.cpp
	$(CXX) $(CXXFLAGS) -c -o istdio.o istdio.cpp

qstringer.o : qstringer.hpp qstringer.cpp
	$(CXX) $(CXXFLAGS) -c -o qstringer.o qstringer.cpp

schema.o : ${hpplist} schema.cpp
	$(CXX) $(CXXFLAGS) -c -o schema.o schema.cpp

xmlutils.o : xmlutils.hpp xmlutils.cpp
	$(CXX) $(CXXFLAGS) -c -o xmlutils.o xmlutils.cpp

advisor.o : advisor.hpp advisor.cpp prandstr.hpp genericuser.hpp
	$(CXX) $(CXXFLAGS) -c -o advisor.o advisor.cpp

datastack.o : datastack.hpp datastack.cpp prandstr.hpp genericuser.hpp
	$(CXX) $(CXXFLAGS) -c -o datastack.o datastack.cpp

adbranch.o : adbranch.cpp adbranch.hpp genericuser.hpp prandstr.hpp datastack.hpp advisor.hpp
	$(CXX) $(CXXFLAGS) -c -o adbranch.o adbranch.cpp

specsreader.o : specsreader.cpp genericuser.hpp prandstr.hpp adbranch.hpp datastack.hpp advisor.hpp
	$(CXX) $(CXXFLAGS) -c -o specsreader.o specsreader.cpp

prandstr.o : prandstr.cpp prandstr.hpp genericuser.hpp istdio.hpp
	$(CXX) $(CXXFLAGS) -c -o prandstr.o prandstr.cpp

vclasses.o : vclasses.cpp vclasses.hpp prandstr.hpp genericuser.hpp istdio.hpp
	$(CXX) $(CXXFLAGS) -c -o vclasses.o vclasses.cpp

ctyper.o : ctyper.cpp ctyper.hpp vclasses.hpp prandstr.hpp genericuser.hpp
	$(CXX) $(CXXFLAGS) -c -o ctyper.o ctyper.cpp

bindc.o : bindc.cpp bindc.hpp genericuser.hpp prandstr.hpp vclasses.hpp ctyper.hpp datastack.hpp
	$(CXX) $(CXXFLAGS) -c -o bindc.o bindc.cpp

bindstack.o : bindstack.cpp bindstack.hpp genericuser.hpp prandstr.hpp vclasses.hpp ctyper.hpp datastack.hpp bindc.hpp
	$(CXX) $(CXXFLAGS) -c -o bindstack.o bindstack.cpp

procedure.o : procedure.cpp procedure.hpp ${hpplist} istdio.hpp
	$(CXX) $(CXXFLAGS) -c -o procedure.o procedure.cpp

fods.o : fods.cpp fods.hpp ${hpplist} istdio.hpp
	$(CXX) $(CXXFLAGS) -c -o fods.o fods.cpp

multipart_pull.o : multipart_pull.cpp multipart_pull.hpp vclasses.hpp prandstr.hpp
	$(CXX) $(CXXFLAGS) -c -o multipart_pull.o multipart_pull.cpp

mysql_loaddata.o : mysql_loaddata.cpp mysql_loaddata.hpp 
	$(CXX) $(CXXFLAGS) -c -o mysql_loaddata.o mysql_loaddata.cpp

linebuffer.o : linebuffer.cpp linebuffer.hpp
	$(CXX) $(CXXFLAGS) -c -o linebuffer.o linebuffer.cpp

storedproc.o : storedproc.cpp ${hpplist}
	$(CXX) $(CXXFLAGS) -c -o storedproc.o storedproc.cpp


# Special builds
install:
	install -D --mode=644 ../LICENSE             /usr/share/doc/SchemaServer
	# install executable and make link
	install -D --mode=755 schema.fcgi            /usr/local/lib/cgi-bin/schema.fcgi
	cp -sf /usr/local/lib/cgi-bin/schema.fcgi    /usr/bin/schema.fcgi

	install -D --mode=644 ../install/sys_procs.sql  /usr/local/lib/SchemaServer/install/sys_procs.sql
	cp -r ../install/ods                         /usr/local/lib/SchemaServer/install
	# install man and info:
	$(call install_documentation)
	# install utilities
	$(call install_utilities)
	# Prepare Apache to recognize schema.fcgi as a document handler
	ifdef $(CGI_PATH)
		install_for_apache
	endif

update-docs:
	$(call install_documentation)

update-utilities:
	$(call install_utilities)

update-server:
	install -D --mode=755 schema.fcgi           /usr/local/lib/cgi-bin/schema.fcgi

stop-update:
	ifdef $(CGI_PATH)
	  apache_stop_update
	endif

update-installs:
	cp ../install/sys_procs.sql                 /usr/local/lib/SchemaServer/sys_procs.sql
	cp -r ../install/ods                        /usr/local/lib/SchemaServer/

uninstall:
	# disable apache configuration ahead of remove the conf file
	ifdef $(CGI_PATH)
		a2disconf SchemaServer
		rm -f /etc/apache2/conf-available/SchemaServer.conf
	endif
	# remove executable and its link
	rm -f /usr/bin/schema.fcgi
	rm -r -f /usr/local/lib/cgi-bin/schema.fcgi
	# remove links to the utilties (that will be deleted with the lib)
	rm -f /usr/bin/ss_chkprocs
	rm -f /usr/bin/ss_chksite
	rm -f /usr/bin/ss_webscript
	# remove man pages
	rm -f /usr/share/man/man1/schema.fcgi.1
	rm -f /usr/share/man/man7/schema.fcgi.7
	# ininstall and remove info page
	install-info --delete /usr/share/info/schema.fcgi.info.gz /usr/share/info/dir
	rm -f /usr/share/info/schema.fcgi.info.gz

	# final clean-up
	rm -r -f /usr/local/lib/SchemaServer

clean:
	rm -f *.o
	rm -f adbranch bindc bindstack ctyper datastack genericuser \
	      multipart_pull prandstr procedure qstringer schema.fcgi \
	      schemaproc specsreader stacker storedproc vclasses

release: CXXFLAGS += -U _DEBUG -D NDEBUG

release: all

run-test:
	cd ../test/; ./test_install; ./test_site Person.srm

remove-test:
	cd ../test/; ./test_uninstall

increment_major:
	$(call increment_file,$(VERSION_MAJOR_FILE))
	$(call zero_file, $(VERSION_MINOR_FILE))
	$(call zero_file, $(VERSION_PATCH_FILE))

increment_minor:
	$(call increment_file,$(VERSION_MINOR_FILE))
	$(call zero_file, $(VERSION_PATCH_FILE))

include version.mak

EOF
) >> ${output}

