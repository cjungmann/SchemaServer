@node Shared Elements
@chapter Shared Elements

Certain collections of properties will be used in many places in an application.
To save typing and, more importantly, to enforce consistency, SchemaServer allows
the definition of @dfn{shared} elements which can be included elsewhere in the
hierarchy.  

There are two types of sharing, @dfn{labelled} and @dfn{siblings}.  The distinction between
the two share types is how they are inserted into their contexts.

Shares can be nested.  That is, a shared element can itself contain shared elements.  The @dfn{siblings} share section below uses nested share.

@section What is a Shared Element?

A shared element is a first-column handle whose tag is @emph{$shared} and includes
a value with which it can be called.  Compare the elements in the following script
with the effective elements after the shares are reconciled:

@subheading Original Script
@example
$shared : escape-options
   option : fight
   option : run
   option : hide
   option : bargain
   option : confess
   option : surrender

disasters
   earthquake
      options : $escape-options
   bear-attack
      options : $escape-options
   caught-cheating
      options : $escape-options
@end example

@subheading Effective Script

@example
disasters
   earthquake
      options
         option : fight
         option : run
         option : hide
         option : bargain
         option : confess
         option : surrender
   bear-attack
      options
         option : fight
         option : run
         option : hide
         option : bargain
         option : confess
         option : surrender
   caught-cheating
      options
         option : fight
         option : run
         option : hide
         option : bargain
         option : confess
         option : surrender
@end example

@section Labeled Share

A labeled share is initiated with a tagged proprty whose value is the name of the shared
element, @emph{prefixed with a $}.  The tag will remain, and the contents of the share
will follow the tag at a new indentation level.  The previous example is an illustration of
a labeled share.  The share is invoked under each disaster by @code{options : $escape-options},
which prompts @command{schema.fcgi} to seek a shared element named @emph{escape-options}.

In the reconciled form, each tag, @emph{options} remains, but is followed by the elements
of the shared @emph{escape-options} element.

@section Siblings Share

Sometimes shared content must be inserted into a given context without additional indentation.
The @dfn{siblings} share method inserts the shared content at the same indentation level as the
invocation of the share.

@example

$shared : physical-options
   option : fight
   option : run
   option : hide

$shared : relate-options
   option : bargain
   option : confess
   option : surrender

$shared : escape-options
   siblings : $physical-options
   siblings : $relate-options

disasters
   earthquake
      options : $escape-options
   .
   .
@end example

In this example, the @emph{escape-options} includes two siblings shares.  The resulting
@emph{escape-options} element will contain the contents of elements @emph{physical-options} and
@emph{relate-options} and would work 



